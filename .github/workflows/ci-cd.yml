name: Build, Terraform, and Deploy

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init
        working-directory: infra

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: infra

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: infra

  build-and-deploy:
    name: Build and Deploy App
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: events

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: youracr.azurecr.io #TODO ACR
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push Docker image
        run: | #TODO ACR
          docker build -t youracr.azurecr.io/events-app:latest . 
          docker push youracr.azurecr.io/events-app:latest
        working-directory: events

      - name: Restart App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: "events-app"
          action: "restart"

      - name: Check App Health
        run: | #TODO app address
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://events-app.azurewebsites.net/actuator/health) 
            echo "Health check HTTP status: $STATUS"
            if [ "$STATUS" -eq 200 ]; then
              echo "✅ App is healthy!"
              exit 0
            fi
            echo "Waiting for app to become healthy... ($i/10)"
            sleep 10
          done
          echo "❌ App failed to become healthy in time"
          exit 1